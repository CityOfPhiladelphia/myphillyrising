#!/bin/sh

shout() { echo "$0: $*" >&2; }  # Just echo an error and the program name
barf() { shout "$*"; exit 111; }
safe() { "$@" || barf "cannot $*"; }

# =============================================================================
# Post-install hook file for configuring dotcloud server

dotcloud_get_env() {
    sed -n "/$1/ s/.*: \"\(.*\)\".*/\1/p" < "/home/dotcloud/environment.json"
}

setup_django_celery() {
    cat > /home/dotcloud/current/supervisord.conf << EOF
[program:djcelery]
directory = /home/dotcloud/current/
command = python website/manage.py celeryd -E -l info -c 2
stderr_logfile = /var/log/supervisor/%(program_name)s_error.log
stdout_logfile = /var/log/supervisor/%(program_name)s.log

EOF
}

echo "Writing the local settings file..."
cat >> website/myphillyrising/local_settings.py <<EOF

import json
with open('/home/dotcloud/environment.json') as f:
    env = json.load(f)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'myphillyrising',
        'USER': env['DOTCLOUD_DB_SQL_LOGIN'],
        'PASSWORD': env['DOTCLOUD_DB_SQL_PASSWORD'],
        'HOST': env['DOTCLOUD_DB_SQL_HOST'],
        'PORT': int(env['DOTCLOUD_DB_SQL_PORT']),
    }
}

STATIC_ROOT = '/home/dotcloud/current/static/'

# Debug is False by default, true if set in the environment.
DEBUG = (env.get('DEBUG', 'False') in ['true', 'True'])
TEMPLATE_DEBUG = DEBUG

# Set these explicitly here to override whatever may have come from settings
STATIC_URL = '/static/'

BROKER_URL = 'django://'  # Use the Django database as the celery broker

LOGGING = {
   'version': 1,
   'disable_existing_loggers': True,
   'formatters': {
       'simple': {
           'format': '%(levelname)s %(message)s',
       },
   },
   'handlers': {
       'console': {
           'level': 'DEBUG',
           'class': 'logging.StreamHandler',
           'formatter': 'simple'
       },
   },
   'loggers': {
       'django': {
           'handlers': ['console'],
           'level': 'DEBUG',
       },
   }
}
EOF

# Need to be able to import settings to run the createdbs script...
echo VIRTUAL_ENV is "$VIRTUAL_ENV"
echo PYTHONPATH is "$PYTHONPATH"
export PYTHONPATH=$PYTHONPATH:$PWD/website/
export DJANGO_SETTINGS_MODULE=myphillyrising.settings
echo "Creating database if needed..."
safe python website/scripts/dotcloud_createdbs.py

echo "Syncing the database..."
safe website/manage.py syncdb --migrate --noinput

if [ `dotcloud_get_env DOTCLOUD_SERVICE_NAME` = workers ] ; then
    echo "Setup Celery"
    setup_django_celery
fi

if [ `dotcloud_get_env DOTCLOUD_SERVICE_NAME` = www ] ; then
    echo "Install node and npm"
    wget http://nodejs.org/dist/v0.10.13/node-v0.10.13-linux-x64.tar.gz
    tar -xzf node-v0.10.13-linux-x64.tar.gz
    export PATH=$PATH:`pwd`/node-v0.10.13-linux-x64/bin

    which node
    which npm

    echo "Install bower and grunt"
    npm install -g bower grunt-cli

    echo "Fetch client dependencies for myphillyrising"
    cd website/myphillyrising
    bower install

    echo "Minify client dependencies"
    npm install
    grunt
    cd ../..

    echo "Fetch client dependencies for alexander"
    cd website/alexander
    bower install

    echo "Minify client dependencies"
    npm install
    grunt
    cd ../..

    echo "Setting up static file service..."
    safe website/manage.py collectstatic --noinput
fi

echo "Configuring nginx to serve static files..."
cat >> nginx.conf <<EOF
location /static/ {
    root /home/dotcloud/current ;
    expires max;
}
gzip on;
gzip_types       text/plain application/json application/x-javascript text/css text/html;
EOF
